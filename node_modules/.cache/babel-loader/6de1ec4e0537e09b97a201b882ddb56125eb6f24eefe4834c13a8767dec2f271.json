{"ast":null,"code":"var _jsxFileName = \"/home/bre3/Moringa/Projects/Art-Gallery-project/src/componets/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtworkForm() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      price: ''\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required('Title is required'),\n      description: Yup.string().required('Description is required'),\n      price: Yup.number().positive('Price must be a positive number').required('Price is required')\n    }),\n    onSubmit: values => {\n      fetch('/api/artworks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      ...formik.getFieldProps('title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), formik.touched.title && formik.errors.title ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 54\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      ...formik.getFieldProps('description')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), formik.touched.description && formik.errors.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 66\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      ...formik.getFieldProps('price')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), formik.touched.price && formik.errors.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 54\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ArtworkForm;\nexport default ArtworkForm;\nvar _c;\n$RefreshReg$(_c, \"ArtworkForm\");","map":{"version":3,"names":["React","useFormik","Yup","jsxDEV","_jsxDEV","ArtworkForm","_s","formik","initialValues","title","description","price","validationSchema","object","string","required","number","positive","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","getFieldProps","touched","errors","_c","$RefreshReg$"],"sources":["/home/bre3/Moringa/Projects/Art-Gallery-project/src/componets/ReviewForm.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction ArtworkForm() {\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      price: '',\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required('Title is required'),\n      description: Yup.string().required('Description is required'),\n      price: Yup.number().positive('Price must be a positive number').required('Price is required'),\n    }),\n    onSubmit: (values) => {\n      fetch('/api/artworks', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values),\n      })\n        .then((response) => response.json())\n        .then((data) => console.log(data))\n        .catch((error) => console.error('Error:', error));\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <h1>Add Artwork</h1>\n      <label>Title</label>\n      <input type=\"text\" name=\"title\" {...formik.getFieldProps('title')} />\n      {formik.touched.title && formik.errors.title ? <div>{formik.errors.title}</div> : null}\n\n      <label>Description</label>\n      <textarea name=\"description\" {...formik.getFieldProps('description')}></textarea>\n      {formik.touched.description && formik.errors.description ? <div>{formik.errors.description}</div> : null}\n\n      <label>Price</label>\n      <input type=\"number\" name=\"price\" {...formik.getFieldProps('price')} />\n      {formik.touched.price && formik.errors.price ? <div>{formik.errors.price}</div> : null}\n\n      <button type=\"submit\">Add Artwork</button>\n    </form>\n  );\n}\n\nexport default ArtworkForm;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGN,SAAS,CAAC;IACvBO,aAAa,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE;IACT,CAAC;IACDC,gBAAgB,EAAEV,GAAG,CAACW,MAAM,CAAC;MAC3BJ,KAAK,EAAEP,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,mBAAmB,CAAC;MACjDL,WAAW,EAAER,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC;MAC7DJ,KAAK,EAAET,GAAG,CAACc,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,iCAAiC,CAAC,CAACF,QAAQ,CAAC,mBAAmB;IAC9F,CAAC,CAAC;IACFG,QAAQ,EAAGC,MAAM,IAAK;MACpBC,KAAK,CAAC,eAAe,EAAE;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM;MAC7B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CACjCG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACrD;EACF,CAAC,CAAC;EAEF,oBACE7B,OAAA;IAAMc,QAAQ,EAAEX,MAAM,CAAC2B,YAAa;IAAAC,QAAA,gBAClC/B,OAAA;MAAA+B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnC,OAAA;MAAA+B,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBnC,OAAA;MAAOoC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,OAAO;MAAA,GAAKlC,MAAM,CAACmC,aAAa,CAAC,OAAO;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpEhC,MAAM,CAACoC,OAAO,CAAClC,KAAK,IAAIF,MAAM,CAACqC,MAAM,CAACnC,KAAK,gBAAGL,OAAA;MAAA+B,QAAA,EAAM5B,MAAM,CAACqC,MAAM,CAACnC;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAG,IAAI,eAEtFnC,OAAA;MAAA+B,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BnC,OAAA;MAAUqC,IAAI,EAAC,aAAa;MAAA,GAAKlC,MAAM,CAACmC,aAAa,CAAC,aAAa;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAChFhC,MAAM,CAACoC,OAAO,CAACjC,WAAW,IAAIH,MAAM,CAACqC,MAAM,CAAClC,WAAW,gBAAGN,OAAA;MAAA+B,QAAA,EAAM5B,MAAM,CAACqC,MAAM,CAAClC;IAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAG,IAAI,eAExGnC,OAAA;MAAA+B,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBnC,OAAA;MAAOoC,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,OAAO;MAAA,GAAKlC,MAAM,CAACmC,aAAa,CAAC,OAAO;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACtEhC,MAAM,CAACoC,OAAO,CAAChC,KAAK,IAAIJ,MAAM,CAACqC,MAAM,CAACjC,KAAK,gBAAGP,OAAA;MAAA+B,QAAA,EAAM5B,MAAM,CAACqC,MAAM,CAACjC;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAG,IAAI,eAEtFnC,OAAA;MAAQoC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAACjC,EAAA,CA1CQD,WAAW;EAAA,QACHJ,SAAS;AAAA;AAAA4C,EAAA,GADjBxC,WAAW;AA4CpB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}